// Generated by CoffeeScript 1.3.3
(function() {
  var Grammar,
    __slice = [].slice;

  Grammar = (function() {

    function Grammar(a) {
      var _ref;
      if (a == null) {
        a = {};
      }
      this.text = a.text;
      if ((_ref = this.text) == null) {
        this.text = '';
      }
      this.tree = a.tree;
      this.parser = a.parser;
      this.receiver = a.receiver;
      this.receiver = a.receiver;
    }

    Grammar.prototype.make_tree = function() {
      var Compiler;
      if (!this.text) {
        throw "Can't create a grammar. No 'text' or 'tree'.";
      }
      Compiler = require('../Pegex/Compiler');
      return Compiler.prototype.compile(text).tree;
    };

    Grammar.prototype.parse = function() {
      var Parser, Receiver, input, parser, receiver, start_rule;
      input = arguments[0], start_rule = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      parser = this.parser;
      if (parser != null) {
        Parser = require('../Pegex/Parser');
        receiver = this.receiver;
        if (typeof receiver !== 'object') {
          Receiver = require(receiver);
          receiver = new Receiver();
        }
        parser = new Parser({
          'grammar': this,
          'receiver': receiver
        });
        return parser.parse(input, start_rule);
      }
    };

    return Grammar;

  })();

}).call(this);
